{"version":3,"sources":["../main.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/9"],"names":[],"mappings":"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","sourcesContent":["angular.module('500lines', []).controller('Spreadsheet', function ($scope, $timeout) {\n  // Begin of $scope properties; start with the column/row labels\n  $scope.Cols = [ for (col of range( 'A', 'H' )) col ];\n  $scope.Rows = [ for (row of range( 1, 20 )) row ];\n\n  function* range(cur, end) { while (cur <= end) { yield cur;\n    // If it’s a number, increase it by one; otherwise move to next letter\n    cur = (isNaN( cur ) ? String.fromCodePoint( cur.codePointAt()+1 ) : cur+1);\n  } }\n\n  // UP(38) and DOWN(40)/ENTER(13) move focus to the row above (-1) and below (+1).\n  $scope.keydown = ({which}, col, row)=>{ switch (which) {\n    case 38: case 40: case 13: $timeout( ()=>{\n      const direction = (which === 38) ? -1 : +1;\n      const cell = document.querySelector( `#${ col }${ row + direction }` );\n      if (cell) { cell.focus(); }\n    } );\n  } };\n\n  // Default sheet content, with some data cells and one formula cell.\n  $scope.reset = ()=>{ $scope.sheet = { A1: 1874, B1: '+', C1: 2046, D1: '⇒', E1: '=A1+C1' }; };\n\n  // Define the initializer, and immediately call it\n  ($scope.init = ()=>{\n    // Restore the previous .sheet; reset to default if it’s the first run\n    $scope.sheet = angular.fromJson( localStorage.getItem( '' ) );\n    if (!$scope.sheet) { $scope.reset(); }\n    $scope.worker = new Worker( 'worker.js' );\n  }).call();\n\n  // Formula cells may produce errors in .errs; normal cell contents are in .vals\n  [$scope.errs, $scope.vals] = [ {}, {} ];\n\n  // Define the calculation handler; not calling it yet\n  $scope.calc = ()=>{\n    const json = angular.toJson( $scope.sheet );\n    const promise = $timeout( ()=>{\n      // If the worker has not returned in 99 milliseconds, terminate it\n      $scope.worker.terminate();\n      // Back up to the previous state and make a new worker\n      $scope.init();\n      // Redo the calculation using the last-known state\n      $scope.calc();\n    }, 99 );\n\n    // When the worker returns, apply its effect on the scope\n    $scope.worker.onmessage = ({data})=>{\n      $timeout.cancel( promise );\n      localStorage.setItem( '', json );\n      $timeout( ()=>{ [$scope.errs, $scope.vals] = data; } );\n    };\n\n    // Post the current sheet content for the worker to process\n    $scope.worker.postMessage( $scope.sheet );\n  };\n\n  // Start calculation when worker is ready\n  $scope.worker.onmessage = $scope.calc;\n  $scope.worker.postMessage( null );\n});\n","$traceurRuntime.initGeneratorFunction($__placeholder__0)","var $__placeholder__0 = 0, $__placeholder__1 = [];","\n        for (var $__placeholder__0 =\n                 $__placeholder__1[Symbol.iterator](),\n                 $__placeholder__2;\n             !($__placeholder__3 = $__placeholder__4.next()).done; ) {\n          $__placeholder__5;\n          $__placeholder__6;\n        }","$__placeholder__0[$__placeholder__1++] = $__placeholder__2;","return $__placeholder__0;","return $__placeholder__0(\n              $__placeholder__1,\n              $__placeholder__2, this);","$traceurRuntime.createGeneratorInstance","function($ctx) {\n      while (true) $__placeholder__0\n    }","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","return $__placeholder__0","$ctx.maybeThrow()","return $ctx.end()"]}
